-- Relatório para o gerente validar as compras, com base no volume máximo de compra por cliente

SELECT * FROM itens_notas_fiscais;

SELECT * FROM notas_fiscais;

SELECT * FROM notas_fiscais NF
	INNER JOIN itens_notas_fiscais INF
    ON NF.NUMERO = INF.NUMERO;
    
SELECT NF.CPF, NF.DATA_VENDA, INF.QUANTIDADE FROM notas_fiscais NF
	INNER JOIN itens_notas_fiscais INF
    ON NF.NUMERO = INF.NUMERO;
    
SELECT NF.CPF, DATE_FORMAT(NF.DATA_VENDA, '%Y-%m') AS MES_ANO, INF.QUANTIDADE FROM notas_fiscais NF
	INNER JOIN itens_notas_fiscais INF
    ON NF.NUMERO = INF.NUMERO;

-- Consulta com vendas de clientes por mês
SELECT NF.CPF, DATE_FORMAT(NF.DATA_VENDA, '%Y-%m') AS MES_ANO,
	SUM(INF.QUANTIDADE) AS QUANTIDADE_VENDAS FROM notas_fiscais NF
		INNER JOIN itens_notas_fiscais INF
		ON NF.NUMERO = INF.NUMERO
        GROUP BY NF.CPF, DATE_FORMAT(NF.DATA_VENDA, '%Y-%m');
        
-- Limite de compra por cliente
SELECT * FROM tabela_de_clientes;

SELECT TC.CPF, TC.NOME, TC.VOLUME_DE_COMPRA AS QUANTIDADE_LIMITE
	FROM tabela_de_clientes TC;
    
SELECT NF.CPF, TC.NOME, DATE_FORMAT(NF.DATA_VENDA, '%Y-%m') AS MES_ANO,
	SUM(INF.QUANTIDADE) AS QUANTIDADE_VENDAS,
    TC.VOLUME_DE_COMPRA AS QUANTIDADE_LIMITE FROM notas_fiscais NF
		INNER JOIN itens_notas_fiscais INF
		ON NF.NUMERO = INF.NUMERO
        INNER JOIN tabela_de_clientes TC
        ON TC.CPF = NF.CPF
        GROUP BY NF.CPF, DATE_FORMAT(NF.DATA_VENDA, '%Y-%m');
        
SELECT X.CPF, X.NOME, X.MES_ANO, X.QUANTIDADE_VENDAS, X.QUANTIDADE_LIMITE,
	X.QUANTIDADE_LIMITE - X.QUANTIDADE_VENDAS AS DIFERENCA FROM
		(SELECT NF.CPF, TC.NOME, DATE_FORMAT(NF.DATA_VENDA, '%Y-%m') AS MES_ANO,
			SUM(INF.QUANTIDADE) AS QUANTIDADE_VENDAS,
			TC.VOLUME_DE_COMPRA AS QUANTIDADE_LIMITE FROM notas_fiscais NF
				INNER JOIN itens_notas_fiscais INF
				ON NF.NUMERO = INF.NUMERO
				INNER JOIN tabela_de_clientes TC
				ON TC.CPF = NF.CPF
				GROUP BY NF.CPF, DATE_FORMAT(NF.DATA_VENDA, '%Y-%m')) X;
                
SELECT X.CPF, X.NOME, X.MES_ANO, X.QUANTIDADE_VENDAS, X.QUANTIDADE_LIMITE,
	X.QUANTIDADE_LIMITE - X.QUANTIDADE_VENDAS AS DIFERENCA,
    CASE WHEN (X.QUANTIDADE_LIMITE - X.QUANTIDADE_VENDAS) < 0 THEN 'INVÁLIDA'
    ELSE 'VÁLIDA'
    END AS STATUS_VENDA
    FROM
		(SELECT NF.CPF, TC.NOME, DATE_FORMAT(NF.DATA_VENDA, '%Y-%m') AS MES_ANO,
			SUM(INF.QUANTIDADE) AS QUANTIDADE_VENDAS,
			TC.VOLUME_DE_COMPRA AS QUANTIDADE_LIMITE FROM notas_fiscais NF
				INNER JOIN itens_notas_fiscais INF
				ON NF.NUMERO = INF.NUMERO
				INNER JOIN tabela_de_clientes TC
				ON TC.CPF = NF.CPF
				GROUP BY NF.CPF, DATE_FORMAT(NF.DATA_VENDA, '%Y-%m')) X;
				
/* 
Nesta aula construímos um relatório que apresentou os clientes que tiveram vendas inválidas. Complemente este relatório listando somente os que tiveram vendas inválidas e calculando a diferença entre o limite de venda máximo e o realizado, em percentuais.
*/

SELECT X.CPF, X.NOME, X.MES_ANO, X.QUANTIDADE_VENDAS, X.QUANTIDADE_LIMITE,
	X.QUANTIDADE_LIMITE - X.QUANTIDADE_VENDAS AS DIFERENCA,
    CASE WHEN (X.QUANTIDADE_LIMITE - X.QUANTIDADE_VENDAS) < 0 THEN 'INVÁLIDA'
    ELSE 'VÁLIDA'
    END AS STATUS_VENDA,
    ROUND((1 - (X.QUANTIDADE_LIMITE/X.QUANTIDADE_VENDAS)) * 100, 2) AS DIFERENCA_PERCENTUAL
    FROM
		(SELECT NF.CPF, TC.NOME, DATE_FORMAT(NF.DATA_VENDA, '%Y-%m') AS MES_ANO,
			SUM(INF.QUANTIDADE) AS QUANTIDADE_VENDAS,
			TC.VOLUME_DE_COMPRA AS QUANTIDADE_LIMITE FROM notas_fiscais NF
				INNER JOIN itens_notas_fiscais INF
				ON NF.NUMERO = INF.NUMERO
				INNER JOIN tabela_de_clientes TC
				ON TC.CPF = NF.CPF
				GROUP BY NF.CPF, DATE_FORMAT(NF.DATA_VENDA, '%Y-%m')) X
	WHERE (X.QUANTIDADE_LIMITE - X.QUANTIDADE_VENDAS) < 0;
				
/*
 Criaremos mais um relatório a pedido da área comercial da empresa de sucos de frutas. A solicitação é um acompanhamento sobre as vendas do ano de 2016 por sabores e eles gostariam de ver as informações no seguinte modelo: SABOR, ANO, QUANTIDADE VENDIDA E PARTICIPAÇÃO PERCENTUAL DO SABOR PELO TOTAL
 */
 
 SELECT TP.SABOR, NF.DATA_VENDA, INF.QUANTIDADE FROM
	tabela_de_produtos TP
    INNER JOIN itens_notas_fiscais INF ON TP.CODIGO_DO_PRODUTO = INF.CODIGO_DO_PRODUTO
    INNER JOIN notas_fiscais NF ON NF.NUMERO = INF.NUMERO;
    


-- Quantidade vendida por sabor por ano, em 2016    
SELECT TP.SABOR,YEAR(NF.DATA_VENDA), SUM(INF.QUANTIDADE) AS QUANTIDADE FROM
	tabela_de_produtos TP
    INNER JOIN itens_notas_fiscais INF ON TP.CODIGO_DO_PRODUTO = INF.CODIGO_DO_PRODUTO
    INNER JOIN notas_fiscais NF ON NF.NUMERO = INF.NUMERO
    WHERE YEAR(DATA_VENDA) = 2016
    GROUP BY TP.SABOR, YEAR(DATA_VENDA)
    ORDER BY SUM(INF.QUANTIDADE) DESC;
    
SELECT YEAR(NF.DATA_VENDA), SUM(INF.QUANTIDADE) AS QUANTIDADE FROM
	tabela_de_produtos TP
    INNER JOIN itens_notas_fiscais INF ON TP.CODIGO_DO_PRODUTO = INF.CODIGO_DO_PRODUTO
    INNER JOIN notas_fiscais NF ON NF.NUMERO = INF.NUMERO
    WHERE YEAR(DATA_VENDA) = 2016
    GROUP BY YEAR(DATA_VENDA)
    ORDER BY SUM(INF.QUANTIDADE) DESC;
  
SELECT * FROM
	(SELECT YEAR(NF.DATA_VENDA) AS ANO, SUM(INF.QUANTIDADE) AS QUANTIDADE FROM
		tabela_de_produtos TP
		INNER JOIN itens_notas_fiscais INF ON TP.CODIGO_DO_PRODUTO = INF.CODIGO_DO_PRODUTO
		INNER JOIN notas_fiscais NF ON NF.NUMERO = INF.NUMERO
		WHERE YEAR(DATA_VENDA) = 2016
		GROUP BY YEAR(DATA_VENDA)) AS VENDAS_TOTAL
	INNER JOIN
	(SELECT TP.SABOR, YEAR(NF.DATA_VENDA) AS ANO, SUM(INF.QUANTIDADE) AS QUANTIDADE FROM
		tabela_de_produtos TP
		INNER JOIN itens_notas_fiscais INF ON TP.CODIGO_DO_PRODUTO = INF.CODIGO_DO_PRODUTO
		INNER JOIN notas_fiscais NF ON NF.NUMERO = INF.NUMERO
		WHERE YEAR(DATA_VENDA) = 2016
		GROUP BY TP.SABOR, YEAR(DATA_VENDA)) AS VENDAS_SABOR
	ON VENDAS_SABOR.ANO = VENDAS_TOTAL.ANO;
    
SELECT VENDAS_SABOR.SABOR, VENDAS_SABOR.ANO, VENDAS_SABOR.QUANTIDADE,
ROUND((VENDAS_SABOR.QUANTIDADE / VENDAS_TOTAL.QUANTIDADE) * 100, 2) AS PARTICIPACAO FROM
	(SELECT YEAR(NF.DATA_VENDA) AS ANO, SUM(INF.QUANTIDADE) AS QUANTIDADE FROM
		tabela_de_produtos TP
		INNER JOIN itens_notas_fiscais INF ON TP.CODIGO_DO_PRODUTO = INF.CODIGO_DO_PRODUTO
		INNER JOIN notas_fiscais NF ON NF.NUMERO = INF.NUMERO
		WHERE YEAR(DATA_VENDA) = 2016
		GROUP BY YEAR(DATA_VENDA)) AS VENDAS_TOTAL
	INNER JOIN
	(SELECT TP.SABOR, YEAR(NF.DATA_VENDA) AS ANO, SUM(INF.QUANTIDADE) AS QUANTIDADE FROM
		tabela_de_produtos TP
		INNER JOIN itens_notas_fiscais INF ON TP.CODIGO_DO_PRODUTO = INF.CODIGO_DO_PRODUTO
		INNER JOIN notas_fiscais NF ON NF.NUMERO = INF.NUMERO
		WHERE YEAR(DATA_VENDA) = 2016
		GROUP BY TP.SABOR, YEAR(DATA_VENDA)) AS VENDAS_SABOR
	ON VENDAS_SABOR.ANO = VENDAS_TOTAL.ANO
    ORDER BY VENDAS_SABOR.QUANTIDADE DESC;

-- Modifique o relatório mas agora para ver o ranking das vendas por tamanho.
SELECT VENDA_TAMANHO.TAMANHO, VENDA_TAMANHO.ANO, VENDA_TAMANHO.QUANTIDADE,
ROUND((VENDA_TAMANHO.QUANTIDADE/VENDA_TOTAL.QUANTIDADE) * 100, 2) AS PARTICIPACAO FROM 
(SELECT TP.TAMANHO, YEAR(NF.DATA_VENDA) AS ANO, SUM(INF.QUANTIDADE) AS QUANTIDADE FROM 
tabela_de_produtos TP 
INNER JOIN itens_notas_fiscais INF ON TP.CODIGO_DO_PRODUTO = INF.CODIGO_DO_PRODUTO
INNER JOIN notas_fiscais NF ON NF.NUMERO = INF.NUMERO
WHERE YEAR(NF.DATA_VENDA) = 2016
GROUP BY TP.TAMANHO, YEAR(NF.DATA_VENDA)) AS VENDA_TAMANHO
INNER JOIN 
(SELECT YEAR(NF.DATA_VENDA) AS ANO, SUM(INF.QUANTIDADE) AS QUANTIDADE FROM 
tabela_de_produtos TP 
INNER JOIN itens_notas_fiscais INF ON TP.CODIGO_DO_PRODUTO = INF.CODIGO_DO_PRODUTO
INNER JOIN notas_fiscais NF ON NF.NUMERO = INF.NUMERO
WHERE YEAR(NF.DATA_VENDA) = 2016
GROUP BY YEAR(NF.DATA_VENDA)) AS VENDA_TOTAL
ON VENDA_TAMANHO.ANO = VENDA_TOTAL.ANO
ORDER BY VENDA_TAMANHO.QUANTIDADE DESC;
